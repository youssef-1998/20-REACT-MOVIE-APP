{"version":3,"sources":["Components/search/SearchBar.js","Components/rating/Rating.js","Components/star-filter/StarFilter.js","Components/movies-card/MoviesCard.js","Components/movies-list/MoviesList.js","App.js","serviceWorker.js","index.js"],"names":["Recherchebar","props","state","name","this","className","onChange","e","rummage","target","value","type","placeholder","aria-describedby","id","React","Component","Rating","arrStars","i","rating","push","onClick","ratingStars","StarFilter","stars","rateIt","MoviesCard","movie","src","picture","title","date","votes","MoviesList","x","map","el","films","App","rateMovie","setState","newRating","searchMovie","y","keyword","add","titre","prompt","image","year","star","list","concat","SearchBar","number","filter","toUpperCase","includes","trim","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6d777db.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBarStyle.css'\r\n\r\nclass Recherchebar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n        }\r\n\r\n    }\r\n    // changeSearch = (e) => {\r\n    //     this.setState({\r\n    //         name: e.target.value\r\n    //     },\r\n    //         () => this.props.rummage(this.state.name)\r\n    //     )\r\n    // }\r\n\r\n    render() {\r\n        const {} = this.state;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\r\n                    <div className=\"input-group\">\r\n                        <input onChange={e => this.props.rummage(e.target.value)} type=\"search\" placeholder=\"Type movie name to search\" aria-describedby=\"button-addon1\" className=\"form-control border-0 bg-light width\" />\r\n                        <div className=\"input-group-append\">\r\n                            <button id=\"button-addon1\" type=\"submit\" className=\"btn btn-link text-primary\"><i className=\"fa fa-search\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recherchebar","import React from 'react';\r\nimport './RatingStyle.css';\r\n\r\nconst Rating = props => {\r\n    \r\n    let arrStars = []\r\n    for(let i =0 ; i<5; i++){\r\n        if(props.rating > i){\r\n            arrStars.push(<span onClick={() => props.ratingStars(i+1)}>★</span>)\r\n        }else{\r\n            arrStars.push(<span onClick={() => props.ratingStars(i+1)}>☆</span>)\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"favoris\">\r\n            {arrStars}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Rating","import React, { Component } from 'react';\r\nimport './StarFilterStyle.css';\r\n\r\nimport Rating from '../rating/Rating'\r\n\r\nclass StarFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"star-filter\">\r\n                <p className=\"nb-favoris\">Minimum Rating</p>\r\n                <Rating rating={this.props.rating} ratingStars={stars => this.props.rateIt(stars)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarFilter","import React, { Component } from 'react';\r\nimport './MoviesCardStyle.css';\r\n\r\nimport Rating from '../rating/Rating'\r\n// import MoviesList from '../movies-list/MoviesList';\r\n\r\nclass MoviesCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {movie} = this.props;\r\n        return (\r\n            \r\n            <div className=\"film-card shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <div className=\"custom-image\">\r\n                    <img src={movie.picture} />\r\n                </div>\r\n                <div className=\"custom-card\">\r\n                    <h3>{movie.title}</h3>\r\n                    <p>{movie.date}</p>\r\n                    <p>{movie.votes }</p>\r\n                    <Rating rating={movie.rating}/>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesCard","import React, { Component } from 'react';\r\nimport './MoviesListStyle.css';\r\n\r\nimport MoviesCard from '../movies-card/MoviesCard'\r\n\r\nclass MoviesList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {x} = this.props;\r\n        return (\r\n\r\n            <div className=\"box-movie\">\r\n                {x.map(el => <MoviesCard movie={el} />)}\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesList","import React, { Component } from 'react';\nimport './App.css';\n\nimport SearchBar from './Components/search/SearchBar';\nimport StarFilter from './Components/star-filter/StarFilter';\nimport MoviesList from './Components/movies-list/MoviesList';\n\nlet films = [\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/ePXuKdXZuJx8hHMNr2yM4jY2L7Z.jpg\",\n    title: \"El Camino: A Breaking Bad Movie\",\n    date: \"2019-10-11\",\n    rating: 2,\n  },\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/ziEuG1essDuWuC5lpWUaw1uXY2O.jpg\",\n    title: \"John Wick: Chapter 3 - Parabellum\",\n    date: \"2019-05-15\",\n    rating: 4,\n  },\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/zfE0R94v1E8cuKAerbskfD3VfUt.jpg\",\n    title: \"It Chapter Two\",\n    date: \"2019-09-04\",\n    rating: 5,\n  },\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/pKKvCaL1TPTVtbI6EeliyND3api.jpg\",\n    title: \"The Dark Knight\",\n    date: \"2008-07-16\",\n    rating: 3,\n  },\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/rCzpDGLbOoPwLjy3OAm5NUPOTrC.jpg\",\n    title: \"The Lord of the Rings: The Return of the King\",\n    date: \"2003-12-01\",\n    rating: 5,\n  },\n  {\n    picture: \"https://image.tmdb.org/t/p/w500/qdfARIhgpgZOBh3vfNhWS4hmSo3.jpg\",\n    title: \"Frozen II\",\n    date: \"2019-11-20\",\n    rating: 4,\n  },\n]\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: films,\n      newRating: 1,\n      keyword: ''\n    }\n  }\n\n  rateMovie = x => {\n    this.setState({ newRating: x })\n  }\n\n  searchMovie = y => {\n    this.setState({ \n      keyword: y\n     })\n    \n  }\n\n  add = () => {\n    let titre = prompt('Enter your titre')\n    let image = prompt('Enter your picture')\n    let year = prompt('Enter the date')\n    let star = prompt('Enter your rate')\n\n    this.setState({\n      list: this.state.list.concat({ title: titre, picture: image, date: year, rating: star })\n    })\n  }\n\n  render() {\n    const { } = this.state;\n    return (\n\n      <div className=\"App\">\n        <div className=\"d-flex justify-content-between\">\n          <SearchBar rummage={titre => this.searchMovie(titre)} />\n          <StarFilter rating={this.state.newRating} rateIt={number => this.rateMovie(number)} />\n        </div>\n        <MoviesList x={this.state.list.filter(el => el.rating >= this.state.newRating && el.title.toUpperCase().includes(this.state.keyword.toUpperCase().trim())) } />\n        <button className=\"btn-plus\" onClick={this.add}>+ add movie</button>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}